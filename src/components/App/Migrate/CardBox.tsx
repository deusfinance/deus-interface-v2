import { useMemo } from 'react'
import styled from 'styled-components'

import { DEUS_TOKEN, Tokens, SYMM_TOKEN } from 'constants/tokens'
import MigrationCard from './MigrationCard'
import useWeb3React from 'hooks/useWeb3'
import { SupportedChainId } from 'constants/chains'
import { useTokenBalances } from 'state/wallet/hooks'
import { useBalancedRatio, useGetUserMigrations } from 'hooks/useMigratePage'
import CongratsCard from './CongratsCard'
import { isMobile } from 'react-device-detect'

const Wrapper = styled.div`
  display: flex;
  align-items: stretch;
  ${({ theme }) => theme.mediaWidth.upToSmall`
    flex-flow: column wrap;
    padding: 10px;
  `};
`

export const MigrationSourceTokens = [Tokens['DEUS'], Tokens['XDEUS'], Tokens['LEGACY_DEI'], Tokens['bDEI_TOKEN']]

export default function CardBox() {
  const { account, chainId } = useWeb3React()

  const chainSourceTokens = MigrationSourceTokens.map((token) => {
    if (chainId && token[chainId]) {
      return token[chainId]
    } else {
      return token[SupportedChainId.FANTOM]
    }
  })
  const sourceBalances = useTokenBalances(account?.toString(), chainSourceTokens)

  const inputAmounts = useMemo(() => {
    return chainSourceTokens.map((token) => {
      return sourceBalances[token?.address]?.quotient.toString()
    })
  }, [sourceBalances, chainSourceTokens])

  const balancedRatio = useBalancedRatio()
  const { userTotalMigration_toDeus, userTotalMigration_toSymm } = useGetUserMigrations(Number(balancedRatio), account)

  const isFullyMigrated = useMemo(() => {
    for (let index = 0; index < inputAmounts.length; index++) {
      const element = inputAmounts[index]
      if (element !== '0') return false
    }
    return true && (userTotalMigration_toDeus.toString() !== '0' || userTotalMigration_toSymm.toString() !== '0')
  }, [inputAmounts, userTotalMigration_toDeus, userTotalMigration_toSymm])

  return (
    <Wrapper>
      {(!isFullyMigrated || !isMobile) && (
        <MigrationCard
          disabled={isFullyMigrated}
          destinationTokens={[DEUS_TOKEN]}
          sourceTokens={[Tokens['LEGACY_DEI'], Tokens['bDEI_TOKEN']]}
          firstDescription="DEUS will focus on the stablecoin concept while leveraging amassed veNFTs for yield generation through liquidity AMOs."
          secondDescription=" DEUS stakers will receive 100% of all fees generated through stablecoin minting, AMOs and future stablecoin products."
        />
      )}
      {!isFullyMigrated ? (
        <MigrationCard
          disabled={isFullyMigrated}
          destinationTokens={[DEUS_TOKEN, SYMM_TOKEN]}
          sourceTokens={[Tokens['DEUS'], Tokens['XDEUS'], Tokens['LEGACY_DEI'], Tokens['bDEI_TOKEN']]}
          firstDescription="BALANCED migration will ensure the user's investment ratio remains the same as before the split, with exposure to perps and stablecoin maintained precisely."
          secondDescription="Migrate easily and confidently to not miss out on any development by choosing the balanced migration approach."
        />
      ) : (
        <CongratsCard
          destinationTokens={[DEUS_TOKEN, SYMM_TOKEN]}
          sourceTokens={[Tokens['DEUS'], Tokens['XDEUS'], Tokens['LEGACY_DEI'], Tokens['bDEI_TOKEN']]}
          deus={userTotalMigration_toDeus.toFixed(2).toString()}
          symm={userTotalMigration_toSymm.toFixed(2).toString()}
        />
      )}
      {(!isFullyMigrated || !isMobile) && (
        <MigrationCard
          disabled={isFullyMigrated}
          destinationTokens={[SYMM_TOKEN]}
          sourceTokens={[Tokens['DEUS'], Tokens['XDEUS'], Tokens['LEGACY_DEI'], Tokens['bDEI_TOKEN']]}
          firstDescription='The SYMMIO project will continue advancing the P2P bilateral (symmetrical) derivatives concept initially called "DEUS v3."'
          secondDescription="Upon migrating to SYMM, migrators will be issued $SYMM tokens, and $SYMM stakers will enjoy 100% of all fees generated by all third-party frontends."
        />
      )}
    </Wrapper>
  )
}
